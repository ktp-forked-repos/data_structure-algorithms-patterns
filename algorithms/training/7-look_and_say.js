/*
    Look-and-Say Sequence

        Find the n’th term in Look-and-say (Or Count and Say) Sequence. The look-and-say sequence is the sequence of below integers:
        1, 11, 21, 1211, 111221, 312211, 13112221, 1113213211, …

    How is above sequence generated?
    n’th term in generated by reading (n-1)’th term.

        The first term is "1"

        Second term is "11", generated by reading first term as "One 1" 
        (There is one 1 in previous term)

        Third term is "21", generated by reading second term as "Two 1"

        Fourth term is "1211", generated by reading third term as "One 2 One 1" 

        and so on


    How to find n’th term?

        Input: n = 3
        Output: 21

        Input: n = 5
        Output: 111221
*/


function lookAndSay(nOutput) {
    var output = '1';
  
    if(nOutput == 1) 
      return output;
    if(output == 2)
      return '11'
    else 
     output = '11';
  
    var computedOutput = '';
    nOutput -=2;
  
    while(nOutput--){
      var couter = 1,
          elm = output[0];
  
      for(var i = 1; i < output.length ;i++) {
        if(elm == output[i]){
          couter++;
        } else {
          computedOutput = `${computedOutput}${couter}${elm}`;
          couter = 1;
          elm = output[i];
        }
      }
      
      computedOutput = `${computedOutput}${couter}${elm}`;
  
      output = computedOutput;
      computedOutput = '';
    }
  
    return output;
  }
  
  console.log(lookAndSay(1));// 1
  
  console.log(lookAndSay(2));// 11
  
  console.log(lookAndSay(3));// 21
  
  console.log(lookAndSay(4));// 1211
  
  console.log(lookAndSay(5));// 111221
  
  console.log(lookAndSay(6));// 312211
  
  console.log(lookAndSay(7));// 13112221
  
  console.log(lookAndSay(8));// 1113213211





  function lookAndSay(nOutput) {
    var output = '1';
  
    if(nOutput == 1) 
      return output;
    if(output == 2)
      return '11'
    else 
     output = '11';
  
    var computedOutput = '';
    nOutput -=2;
  
    while(nOutput--){
      var counter = 1,
          arrFromOutput = Array.from(output);
          elm = arrFromOutput.shift(),
          nextElm = null;
  
      while(nextElm = arrFromOutput.shift()){
        if(elm == nextElm){
          counter++;
        } else {
            computedOutput = `${computedOutput}${counter}${elm}`;
            counter = 1;
            elm = nextElm;
        }
      }
      
      computedOutput = `${computedOutput}${counter}${elm}`;
  
      output = computedOutput;
      computedOutput = '';
    }
  
    return output;
  }
  
  console.log(lookAndSay(1));// 1
  
  console.log(lookAndSay(2));// 11
  
  console.log(lookAndSay(3));// 21
  
  console.log(lookAndSay(4));// 1211
  
  console.log(lookAndSay(5));// 111221
  
  console.log(lookAndSay(6));// 312211
  
  console.log(lookAndSay(7));// 13112221
  
  console.log(lookAndSay(8));// 1113213211